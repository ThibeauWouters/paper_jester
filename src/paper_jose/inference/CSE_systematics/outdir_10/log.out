Tue Mar  4 15:13:13 CET 2025
NVIDIA H100
NVIDIA H100
NVIDIA H100
NVIDIA H100
In Sampler.py, we found 4 devices ([CudaDevice(id=0), CudaDevice(id=1), CudaDevice(id=2), CudaDevice(id=3)]) and 4 local devices ([CudaDevice(id=0), CudaDevice(id=1), CudaDevice(id=2), CudaDevice(id=3)])
Using a mesh in Sampler.py
Warning: weights not properly specified, assuming constant weights instead.
GPU found?
[CudaDevice(id=0), CudaDevice(id=1), CudaDevice(id=2), CudaDevice(id=3)]
Using the broad EOS prior
Using the regular nbreak prior: U[1.0, 2.0] * 0.16
Fixed params loaded inside the MicroToMacroTransform:
    E_sat: -16.0
Loading data necessary for the event GW170817
Loading data necessary for the event J0030 and sampling the with NICER masses
Loading data necessary for the event J0740 and sampling the with NICER masses
Not sampling PREX or CREX data now
Loading data necessary for the Chiral EFT
Sanity checking: likelihoods_list = [<paper_jose.utils.GWlikelihood_with_masses object at 0x148eac4ebcd0>, <paper_jose.utils.NICERLikelihood_with_masses object at 0x1474d7e7e7d0>, <paper_jose.utils.NICERLikelihood_with_masses object at 0x1474e0317370>, <paper_jose.utils.RadioTimingLikelihood object at 0x14887df8cb20>, <paper_jose.utils.RadioTimingLikelihood object at 0x14887df8d900>, <paper_jose.utils.RadioTimingLikelihood object at 0x1474e026fa60>, <paper_jose.utils.ChiEFTLikelihood object at 0x1474e026ec20>]
len(likelihoods_list) = 7
Fixed params loaded inside the MicroToMacroTransform:
    E_sat: -16.0
We are going to give these kwargs to Jim:
{'n_loop_training': 20, 'n_loop_production': 20, 'n_chains': 1000, 'n_local_steps': 2, 'n_global_steps': 100, 'n_epochs': 20, 'train_thinning': 1, 'output_thinning': 5}
We are going to sample the following parameters:
['E_sym', 'L_sym', 'K_sym', 'Q_sym', 'Z_sym', 'K_sat', 'Q_sat', 'Z_sat', 'nbreak', 'n_CSE_0_u', 'cs2_CSE_0', 'n_CSE_1_u', 'cs2_CSE_1', 'n_CSE_2_u', 'cs2_CSE_2', 'n_CSE_3_u', 'cs2_CSE_3', 'n_CSE_4_u', 'cs2_CSE_4', 'n_CSE_5_u', 'cs2_CSE_5', 'n_CSE_6_u', 'cs2_CSE_6', 'n_CSE_7_u', 'cs2_CSE_7', 'n_CSE_8_u', 'cs2_CSE_8', 'n_CSE_9_u', 'cs2_CSE_9', 'cs2_CSE_10', 'mass_1_GW170817', 'mass_2_GW170817', 'mass_J0030', 'mass_J0740']
No sample transforms provided. Using prior parameters as sampling parameters
Using a mesh in ProposalBase.py
Using a mesh in ProposalBase.py
['n_dim', 'n_chains', 'n_local_steps', 'n_global_steps', 'n_loop', 'output_thinning', 'verbose']
log_prob
[-7.98505546e+01 -1.00001932e+07 -1.10326008e+02]
Sampling seed is set to: 11
Global Tuning:   0%|          | 0/20 [00:00<?, ?it/s]Global Tuning:   0%|          | 0/20 [00:00<?, ?it/s]
jax.errors.SimplifiedTraceback: For simplicity, JAX has removed its internal frames from the traceback of the following exception. Set JAX_TRACEBACK_FILTERING=off to include these.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/gpfs/home6/twouters2/projects/jax_tov_eos/paper_jose/src/paper_jose/inference/inference.py", line 492, in <module>
    main(args)
  File "/gpfs/home6/twouters2/projects/jax_tov_eos/paper_jose/src/paper_jose/inference/inference.py", line 419, in main
    jim.sample(jax.random.PRNGKey(args.sampling_seed))
  File "/gpfs/home6/twouters2/projects/jax_tov_eos/jim/src/jimgw/jim.py", line 146, in sample
    self.sampler.sample(initial_position, None)  # type: ignore
  File "/gpfs/home6/twouters2/projects/jax_tov_eos/flowMC/src/flowMC/Sampler.py", line 204, in sample
    ) = strategy(
  File "/gpfs/home6/twouters2/projects/jax_tov_eos/flowMC/src/flowMC/strategy/global_tuning.py", line 92, in __call__
    ) = local_sampler.sample(
  File "/gpfs/home6/twouters2/projects/jax_tov_eos/flowMC/src/flowMC/proposal/MALA.py", line 166, in sample
    logp = self.logpdf_vmap(initial_position, data)
  File "/gpfs/home6/twouters2/projects/jax_tov_eos/jim/src/jimgw/jim.py", line 127, in posterior
    prior = self.prior.log_prob(named_params) + transform_jacobian
  File "/gpfs/home6/twouters2/projects/jax_tov_eos/jim/src/jimgw/prior.py", line 232, in log_prob
    output += prior.log_prob(z)
  File "/gpfs/home6/twouters2/projects/jax_tov_eos/jim/src/jimgw/prior.py", line 185, in log_prob
    z, log_jacobian = transform.inverse(z)
  File "/gpfs/home6/twouters2/projects/jax_tov_eos/jim/src/jimgw/transforms.py", line 147, in inverse
    jacobian = jnp.log(jnp.absolute(jnp.linalg.det(jacobian.reshape(self.n_dim, self.n_dim))))
  File "/home/twouters2/miniconda3/envs/jose/lib/python3.10/site-packages/jax/_src/numpy/array_methods.py", line 753, in meth
    return getattr(self.aval, name).fun(self, *args, **kwargs)
  File "/home/twouters2/miniconda3/envs/jose/lib/python3.10/site-packages/jax/_src/numpy/array_methods.py", line 156, in _reshape
    newshape = _compute_newshape(a, args[0] if len(args) == 1 else args)
  File "/home/twouters2/miniconda3/envs/jose/lib/python3.10/site-packages/jax/_src/numpy/array_methods.py", line 144, in _compute_newshape
    raise TypeError(f"cannot reshape array of shape {np.shape(a)} (size {np.size(a)}) "
TypeError: cannot reshape array of shape (1, 34, 34) (size 1156) into shape (1, 1) (size 1)



Postprocessing now
suffix
10
Note: the given suffix is a number, therefore we assume this is a CSE systematics run, so we will make all plots
Checking the convergence for ./CSE_systematics/outdir_10/
list(data.keys())
['log_prob', 'E_sym', 'L_sym', 'K_sym', 'Q_sym', 'Z_sym', 'K_sat', 'Q_sat', 'Z_sat', 'nbreak', 'n_CSE_0_u', 'cs2_CSE_0', 'n_CSE_1_u', 'cs2_CSE_1', 'n_CSE_2_u', 'cs2_CSE_2', 'n_CSE_3_u', 'cs2_CSE_3', 'n_CSE_4_u', 'cs2_CSE_4', 'n_CSE_5_u', 'cs2_CSE_5', 'n_CSE_6_u', 'cs2_CSE_6', 'n_CSE_7_u', 'cs2_CSE_7', 'n_CSE_8_u', 'cs2_CSE_8', 'n_CSE_9_u', 'cs2_CSE_9', 'cs2_CSE_10', 'mass_1_GW170817', 'mass_2_GW170817', 'mass_J0030', 'mass_J0740']
Key: E_sym
    rhat = 1.1017733158423477
    ess = 6621.5918171645
Key: L_sym
    rhat = 1.1220627955097358
    ess = 5331.7176614953105
Key: K_sym
    rhat = 1.139259243019527
    ess = 4759.185200465061
Key: Q_sym
    rhat = 1.1027909602802204
    ess = 6229.963264953736
Key: Z_sym
    rhat = 1.09975648813499
    ess = 6800.555395295531
Key: K_sat
    rhat = 1.115618046642793
    ess = 5598.492011653161
Key: Q_sat
    rhat = 1.1059444541911627
    ess = 6022.7632563072775
Key: Z_sat
    rhat = 1.109757675321385
    ess = 5864.350633324631
Key: nbreak
    rhat = 1.1237630235749523
    ess = 5290.635110011277
Key: n_CSE_0_u
    rhat = 1.1096331717762011
    ess = 5851.943805363395
Key: cs2_CSE_0
    rhat = 1.1450287437813857
    ess = 4551.92033203295
Key: n_CSE_1_u
    rhat = 1.1329206799049112
    ess = 4954.889986134366
Key: cs2_CSE_1
    rhat = 1.1094803044953323
    ess = 5884.646840742822
Key: n_CSE_2_u
    rhat = 1.1193571969860794
    ess = 5406.559938593657
Key: cs2_CSE_2
    rhat = 1.112809490139838
    ess = 5711.717928176878
Key: n_CSE_3_u
    rhat = 1.1186212241186921
    ess = 5509.121491720005
Key: cs2_CSE_3
    rhat = 1.1215287778258438
    ess = 5290.634545502254
Key: n_CSE_4_u
    rhat = 1.116332415316755
    ess = 5561.095321373099
Key: cs2_CSE_4
    rhat = 1.1141541033765088
    ess = 5639.754515944708
Key: n_CSE_5_u
    rhat = 1.0955692978226441
    ess = 6617.1477385151575
Key: cs2_CSE_5
    rhat = 1.1007134172250774
    ess = 6350.92753978011
Key: n_CSE_6_u
    rhat = 1.1193582963920736
    ess = 5371.752118209735
Key: cs2_CSE_6
    rhat = 1.1120211018422574
    ess = 6089.909785215385
Key: n_CSE_7_u
    rhat = 1.1164199584733079
    ess = 5544.623235094367
Key: cs2_CSE_7
    rhat = 1.115262648238264
    ess = 5623.1488637827415
Key: n_CSE_8_u
    rhat = 1.1147941996172792
    ess = 5528.3408883128195
Key: cs2_CSE_8
    rhat = 1.1177199292008824
    ess = 5558.02607503242
Key: n_CSE_9_u
    rhat = 1.113870194413196
    ess = 5679.440648477177
Key: cs2_CSE_9
    rhat = 1.1095109697310954
    ess = 5801.9784307113105
Key: cs2_CSE_10
    rhat = 1.105132599730742
    ess = 6076.1994169247955
Key: mass_1_GW170817
    rhat = 1.130930594840775
    ess = 5014.256819955049
Key: mass_2_GW170817
    rhat = 1.1410108801694323
    ess = 4696.193855938
Key: mass_J0030
    rhat = 1.104826599277081
    ess = 6107.918576718065
Key: mass_J0740
    rhat = 1.1037627062662434
    ess = 6139.351825823769
Going to make the Hauke combination plot for outdir = ./CSE_systematics/outdir_10/
  0%|          | 0/3001 [00:00<?, ?it/s]  9%|▉         | 266/3001 [00:00<00:01, 2659.34it/s] 18%|█▊        | 532/3001 [00:00<00:01, 1836.09it/s] 27%|██▋       | 804/3001 [00:00<00:01, 2158.29it/s] 36%|███▌      | 1078/3001 [00:00<00:00, 2357.54it/s] 45%|████▌     | 1352/3001 [00:00<00:00, 2480.86it/s] 54%|█████▍    | 1627/3001 [00:00<00:00, 2566.36it/s] 63%|██████▎   | 1891/3001 [00:00<00:00, 2024.81it/s] 72%|███████▏  | 2164/3001 [00:00<00:00, 2207.27it/s] 81%|████████▏ | 2439/3001 [00:01<00:00, 2352.61it/s] 90%|█████████ | 2712/3001 [00:01<00:00, 2456.30it/s]100%|█████████▉| 2987/3001 [00:01<00:00, 2539.57it/s]100%|██████████| 3001/3001 [00:01<00:00, 2359.42it/s]



Postprocessing done
DONE

JOB STATISTICS
==============
Job ID: 10296509
Cluster: snellius
User/Group: twouters2/twouters2
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 64
CPU Utilized: 00:03:17
CPU Efficiency: 1.92% of 02:50:40 core-walltime
Job Wall-clock time: 00:02:40
Memory Utilized: 1.62 GB
Memory Efficiency: 2.03% of 80.00 GB
